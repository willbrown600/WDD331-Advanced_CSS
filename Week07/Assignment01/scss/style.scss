@import "partial.scss";


//variables to setup basic size and shape of the card and pips
$card-width: 40vw;
$card-height: $card-width*1.4;
$font-size-number: $card-width * 0.1;
$icon-size: $card-width / 5;


*,
*:before,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

//styles to draw a basic outline of a card
.card {
    border: 1px solid grey;
    height: $card-height;
    width: $card-width;
    border-radius: 10px;
    margin: 20px;
    box-shadow: 2px 2px 4px grey;
}
//because it is a card front we want a bit of extra padding
.card-front {
    padding: .5em;
}

.row {
    padding: 3%;
    padding-right: 6%;
    display: grid;
    text-align: center;
    height: 90%;
    grid-gap: 15%;
   
  
  }
  
  .col-1 {
    grid-column: 1 / span 5;
  }
  
  .col-2 {
    grid-column: 2 / span 2;
  }
  

@supports not (display: grid) {
	// All of your flexbox SCSS code here.  
  
  .card-front {
    padding: .5em;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: stretch;
    align-content: stretch;
  }
  
  .card-front div {
    max-height: 50px;
    border: 0px solid white;
    display: block;
    position: relative;
  }

  .card-front div:nth-child(4) {
    margin: 0 43%;
    width: 100%;
  }
  
  .card-front div:nth-child(2) {
    right: 40px;
  }
  .card-front div:nth-child(3) {
    right: 30px;
  }
  .card-front div:nth-child(4) {
    right: 5px;
    top: 10px;
  }
  .card-front div:nth-child(5) {
    left: 30px;
  }
  .card-front div:nth-child(6) {
    left: 90px;
  }
  .card-front div:nth-child(7) {
    top: 130px;
    right: 115px;
  }
  .card-front div:nth-child(8) {
    top: 130px;
    right: 50px;
  }
   
  .card-front div:first-child, .card-front div:last-child {
    display: block;
  }
  .card-front div:last-child {
    position: relative;
    left: 88%;
    top: 50px;
  }
} 


//set icon size
.icon {
    width: $icon-size;
    height: $icon-size;
}

.number {
    text-align: center;
    font-size: $font-size-number;

    //an icon that is part of a number should be half the normal size
    &>.icon {
        width: $icon-size * .5;
        height: $icon-size *.5;
    }
}

//rotate bottom pips 180deg
.rotate {
    transform: rotate(180deg);
}



